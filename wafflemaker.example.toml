# The base agent configuration
[agent]
  # The port and address where the agent should listen to receive webhooks
  address = "127.0.0.1:8000"

  # The logging specification in the RUST_LOG format, can be overridden
  # by the RUST_LOG environment variable
  # Default: "info"
  log = "info"

  # The number of deployment processors to run
  workers = 2

[dependencies]
  # The PostgreSQL URL template for services to connect to
  # The variables `username` and `password` are automatically substituted for
  # the credentials generated by Vault. The `database` variable will be
  # substituted for the name of the service
  postgres = "postgres://{{username}}:{{password}}@127.0.0.1:5432/{{database}}"

  # The Redis url for services to connect to
  redis = "redis://127.0.0.1:6379"

# The deployment engine configuration
[deployment]
  # The base domain where services are deployed on
  domain = "wafflehacks.tech"

  # The type of deployer to use
  # Current supports:
  #   - docker (or any docker-compatible runtime)
  type = "docker"

  # How to connect to docker
  # Options:
  #   - local     connect via unix socket or local pipe
  #   - http      connect using unsecured HTTP
  #   - ssl       connect using HTTPS
  connection = "local"

  # The endpoint to connect to
  # Expects a path for `local`, and a URL for `http` or `ssl`
  endpoint = "unix:///var/run/docker.sock"

  # The Docker network that the containers should be attached to.
  # This network should also be configured to have Traefik listening on it.
  network = "traefik"

  # Where the server state should be stored
  state = "./state"

  # How long to wait in seconds for a request to complete
  timeout = 120

  # SSL only
  # The certificate authority to use
  #ca = "./ca.pem"

  # SSL only
  # The certificate to use
  #certificate = "./cert.pem"

  # SSL only
  # The certificate key to use
  #key = "./key.pem"

# Configuration for the services repository
[git]
  # Where to clone the configuration repository to
  # The directory will be created if it does not exist
  clone_to = "./configuration"

  # The repository to pull configuration from
  repository = "WaffleHacks/waffles"

# Configuration for the Hashicorp Vault instance. WaffleMaker assumes
# that the following services are enabled and properly configured on
# the following paths:
#   - kv v2 on /services
#   - database on /database with a postgresql database configured named "postgresql"
#   - aws on /aws
[secrets]
  # The address where Vault can be accessed
  address = "http://127.0.0.1:8200"

  # How often to check for expiring credential leases.
  # Supported suffixes are:
  #   - hour: h
  #   - minute: m
  #   - second: s
  # Defaults to minutes (m) if not specified or a valid prefix is not found.
  lease_interval = "1m"

  # The percent of the TTL that should be used before renewing a credential lease.
  # Leases are checked every minute to see if they should be refreshed.
  lease_percent = 0.75

  # A Vault token that has the following permissions:
  #   - create, read, update on services/data/+
  #   - list, create, delete on database/roles/+ for a database named "postgresql"
  #   - read on database/creds/+
  #   - read on aws/creds/+
  # The token should not have a max TTL and be able to renew itself
  token = "s.some-token"

  # How often to extend the token's lifetime. This should be slightly shorter than the token's
  # max TTL.
  # Supported suffixes are:
  #   - hour: h
  #   - minute: m
  #   - second: s
  # Defaults to minutes (m) if not specified or a valid prefix is not found.
  token_interval = "24h"

# Configuration for incoming webhooks
[webhooks]
  # DockerHub is used for notifying of updated images.
  # This must be webhook authentication token for HTTP basic auth
  # Must be in the format:
  #   <something>:<something>
  docker = "please-change:this-token"

  # GitHub for receiving service configuration updates.
  # This must be the webhook signing secret.
  github = "please-change-this-secret"
